// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  habits    Habit[]
  sessions  Session[]
  accounts  Account[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Habit {
  id          String      @id @default(cuid())
  title       String
  description String?
  frequency   Frequency   @default(DAILY)
  streakCount Int         @default(0)
  lastCompleted DateTime?
  color       String
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  completions HabitCompletion[]

  @@map("habits")
}

model HabitCompletion {
  id          String   @id @default(cuid())
  completedAt DateTime @default(now())
  notes       String?
  createdAt   DateTime @default(now())

  habitId     String
  habit       Habit    @relation(fields: [habitId], references: [id], onDelete: Cascade)

  @@map("habit_completions")
}

enum Frequency {
  DAILY
  WEEKLY
  MONTHLY
} 